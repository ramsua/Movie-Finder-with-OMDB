/*
Componentes que siempre van a ser hijos
de otro componente y que por lo general,
tendrán otro componente como hijo
*/

/* ========================================= */
/*
    Debe ser hijo directo del componente a remover
    y un componente hijo con
    atributo data "data-removecomponent="remove-component""
*/
.remove-component {
	position: absolute;
	top: var(--unit-em);
	right: var(--unit-em);

	z-index: var(--z-index-fixed);
}
.remove-component__trigger {
	/* A futuro */
}

/* ========================================== */
/*
    Si la contraseña de usuario al repetirla es la misma, asigna esta clase
*/
.equal-to {
	outline-color: rgb(102, 255, 0);
}

/*
    Si un campo de formulario está vacío se asigna esta clase
*/
.alert,
.alert::placeholder {
	outline-color: var(--main-color-lighten);
	color: var(--main-color-lighten);
}

.equal-to,
.alert {
	outline-width: 3px;
	outline-style: solid;
}

/*
    Fade in
*/
.fade-in {
	animation: fadeIn 0.25s linear;
}
@keyframes fadeIn {
	from {
		opacity: 0.75;
	} /* Por defecto si no se asigna "to" toma el valor inicial del elemento */
}
.alerts__alert {
	position: fixed;
	top: 50%;
	left: 50%;

	width: 100%;
	max-width: 290px;

	padding: var(--unit-em);

	background-color: var(--main-color-lighten);
	color: var(--dark-color-darken);
	text-align: center;
	font-size: 1.3em;

	outline-color: inherit;

	transform: translate(-50%, -50%);
	z-index: var(--z-index-fixed);
}

/* ====================== */
/*
    Mensaje de bienvenida
*/
.welcome {
	padding: 0.5em 1em;

	width: 100%;

	background-color: var(--dark-color-darken);

	z-index: var(--z-index-fixed);
}
.welcome__title {
	margin: 0.5em 0;
	color: var(--main-color-lighten);
}
